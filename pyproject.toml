[tool.poetry]
name = "termlog"
version = "1.3.3"
description = "A Terminal logging library"
authors = ["Brian Bruggeman <Brian.M.Bruggeman@gmail.com>"]
license = "MIT"

# New attributes
readme = "README.rst"
homepage = "https://github.com/brianbruggeman/termlog"
repository = "https://github.com/brianbruggeman/termlog"
keywords = ["terminal", "logging", "color", "json"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Typing :: Typed",
]
include = [
    "AUTHORS.rst",
    "CHANGES.rst",
    "LICENSE.rst",
]

[tool.poetry.dependencies]
python = "^3.8"
pygments = "^2.6.1"

[tool.poetry.dev-dependencies]
black = "^19.10b0"
coverage = "^5.2.1"
isort = "^5.4.2"
mypy = "^0.782"
pytest = "^6.0.1"
pytest-black = "^0.3.10"
pytest-cov = "^2.10.1"
pytest-isort = "^1.1.0"
pytest-mypy = "^0.6.2"
pytest-xdist = "^2.0.0"
sphinx = "^3.2.1"
sphinx_rtd_theme = "^0.5.0"
sphinxcontrib-plantuml = "^0.18"
twine = "^3.2.0"

[tool.isort]
line_length = 140
indent = '    '
include_trailing_comma = true
multi_line_output = 3
length_sort = false
combine_star = true
known_third_party = "pytest"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip_glob = '''
    ./*.py
    setup.py
    termlog/__init__.py
    __*.py
    __pycache__
    .pytest_cache
    .git
    .tox
    .eggs
    *.egg-info
    docs
    vendored
'''

[tool.coverage.run]
branch = true
omit = [
    "setup.py","*/__*.py","tests/*","**/tests/*","*vendored"
]
source = ["termlog", "tests"]

[tool.coverage.html]
directory = "docs/_build/html/"


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "def __dir__",
    "if __name__ == __main__.:",
]

[tool.black]
line-length = 140
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
    /(
        \.eggs        # exclude the top level egg packages when installed
     |  \.git         # exclude dvcs
     |  \.mypy_cache  # exclude mypy artifacts
     |  \.venv        # exclude localized virtual environment if exists
     | build          # exclude build artifacts
     | dist           # exclude distribution

   )/
)
'''


[tool.pytest.ini_options]
filterwarnings = [
    # requests and sqlalchemy incorrectly use the modern collections.abc
    "ignore::DeprecationWarning",
]

testpaths = [
    # Include package
    "termlog",
    # Scripts are used during release and should be tested
    "scripts",
    # Currently, tests are found under just /tests
    "tests",
]

# These options _can_ be overridden on the command-line invocation.
addopts =  [
    "-p", "no:logging",
    "-r", "a",
    "-q",
#    "--isort",
#    "--black",
#    "--mypy",
#    "-vv",
#    "--cov",
#    "--cov-report=term-missing",
#    "--cov-report=term:skip-covered",
#    "--cov-fail-under=80",
]

# Ignore files/tests under these paths
norecursedirs = [
    # generated from pip install
    "*.egg",
    ".eggs",
    # generated from pip install .
    "*.egg-info",
    # generated by flake8 and isort during pytest
    ".cache",
    # repo ingestion
    ".git",
    # generated during execution
    "__pycache__",
    # package build artifacts
    "build",
    # pypi artifacts
    "dist*",
    # ignore documentation when testing
    "docs",
    # pytest artifacts
    ".pytest_cache",

]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
